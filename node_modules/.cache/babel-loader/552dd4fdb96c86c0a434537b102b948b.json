{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\adity\\\\OneDrive\\\\Desktop\\\\react-sentiment-analyzer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _ from 'lodash';\nexport var getValueFromEvent = function getValueFromEvent(_ref) {\n  var value = _ref.target.value;\n  return value;\n};\nexport var parseSentiment = function parseSentiment(_ref2) {\n  var score = _ref2.score,\n      normalizedScore = _ref2.normalizedScore;\n  return Object.freeze({\n    score: score,\n    normalizedScore: normalizedScore\n  });\n};\nexport var parseToxicity = function parseToxicity(data) {\n  return _.chain(data).find({\n    label: 'toxicity'\n  }).get('results').head().toPairs().reduce(function (acc, next) {\n    if (_.head(next) === 'match') {\n      return Object.freeze(_objectSpread({}, acc, {\n        match: _.last(next)\n      }));\n    }\n\n    return Object.freeze(_objectSpread({}, acc, {\n      probability: _.flow(_.last, _.last, _.partialRight(_.round, [2]))(next)\n    }));\n  }, Object.freeze({})).value();\n};","map":{"version":3,"sources":["C:\\Users\\adity\\OneDrive\\Desktop\\react-sentiment-analyzer\\src\\utils\\utils.js"],"names":["_","getValueFromEvent","value","target","parseSentiment","score","normalizedScore","Object","freeze","parseToxicity","data","chain","find","label","get","head","toPairs","reduce","acc","next","match","last","probability","flow","partialRight","round"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAaC,KAAb,QAAGC,MAAH,CAAaD,KAAb;AAAA,SAA2BA,KAA3B;AAAA,CAA1B;AAEP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,MAAUC,eAAV,SAAUA,eAAV;AAAA,SAC1BC,MAAM,CAACC,MAAP,CAAc;AACVH,IAAAA,KAAK,EAALA,KADU;AAEVC,IAAAA,eAAe,EAAfA;AAFU,GAAd,CAD0B;AAAA,CAAvB;AAMP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAC7BV,CAAC,CAACW,KAAF,CAAQD,IAAR,EACKE,IADL,CACU;AAAEC,IAAAA,KAAK,EAAE;AAAT,GADV,EAEKC,GAFL,CAES,SAFT,EAGKC,IAHL,GAIKC,OAJL,GAKKC,MALL,CAKY,UAACC,GAAD,EAAMC,IAAN,EAAe;AACnB,QAAInB,CAAC,CAACe,IAAF,CAAOI,IAAP,MAAiB,OAArB,EAA8B;AAC1B,aAAOZ,MAAM,CAACC,MAAP,mBACAU,GADA;AAEHE,QAAAA,KAAK,EAAEpB,CAAC,CAACqB,IAAF,CAAOF,IAAP;AAFJ,SAAP;AAIH;;AAED,WAAOZ,MAAM,CAACC,MAAP,mBACAU,GADA;AAEHI,MAAAA,WAAW,EAAEtB,CAAC,CAACuB,IAAF,CACTvB,CAAC,CAACqB,IADO,EAETrB,CAAC,CAACqB,IAFO,EAGTrB,CAAC,CAACwB,YAAF,CAAexB,CAAC,CAACyB,KAAjB,EAAwB,CAAC,CAAD,CAAxB,CAHS,EAIXN,IAJW;AAFV,OAAP;AAQH,GArBL,EAqBOZ,MAAM,CAACC,MAAP,CAAc,EAAd,CArBP,EAsBKN,KAtBL,EAD6B;AAAA,CAA1B","sourcesContent":["import _ from 'lodash';\r\n\r\nexport const getValueFromEvent = ({ target: { value } }) => value;\r\n\r\nexport const parseSentiment = ({ score, normalizedScore }) =>\r\n    Object.freeze({\r\n        score,\r\n        normalizedScore,\r\n    });\r\n\r\nexport const parseToxicity = data =>\r\n    _.chain(data)\r\n        .find({ label: 'toxicity' })\r\n        .get('results')\r\n        .head()\r\n        .toPairs()\r\n        .reduce((acc, next) => {\r\n            if (_.head(next) === 'match') {\r\n                return Object.freeze({\r\n                    ...acc,\r\n                    match: _.last(next),\r\n                });\r\n            }\r\n\r\n            return Object.freeze({\r\n                ...acc,\r\n                probability: _.flow(\r\n                    _.last,\r\n                    _.last,\r\n                    _.partialRight(_.round, [2]),\r\n                )(next),\r\n            });\r\n        }, Object.freeze({}))\r\n        .value();\r\n"]},"metadata":{},"sourceType":"module"}