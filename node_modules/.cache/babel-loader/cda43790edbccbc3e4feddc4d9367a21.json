{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\adity\\\\OneDrive\\\\Desktop\\\\react-sentiment-analyzer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar _createReducer;\n\nimport { createReducer } from 'redux-act';\nimport update from 'immutability-helper';\nimport { clearSentimentInput, updateSentimentInput, reportSentimentAnalysis, startAnalyzeToxicity, failAnalyzeToxicity, completeAnalyzeToxicity, resetAnalyzeToxicity } from '../actions/analyze';\nvar initialState = Object.freeze({\n  input: '',\n  sentiment: null,\n  toxicity: Object.freeze({\n    data: null,\n    fetching: false,\n    error: null\n  })\n});\nexport default createReducer((_createReducer = {}, _defineProperty(_createReducer, updateSentimentInput, function (state, payload) {\n  return update(state, {\n    input: {\n      $set: payload\n    },\n    toxicity: {\n      data: {\n        $set: null\n      },\n      error: {\n        $set: null\n      }\n    }\n  });\n}), _defineProperty(_createReducer, reportSentimentAnalysis, function (state, payload) {\n  return update(state, {\n    sentiment: {\n      $set: payload\n    }\n  });\n}), _defineProperty(_createReducer, startAnalyzeToxicity, function (state) {\n  return update(state, {\n    toxicity: {\n      data: {\n        $set: null\n      },\n      fetching: {\n        $set: true\n      },\n      error: {\n        $set: null\n      }\n    }\n  });\n}), _defineProperty(_createReducer, failAnalyzeToxicity, function (state, payload) {\n  return update(state, {\n    toxicity: {\n      fetching: {\n        $set: false\n      },\n      error: {\n        $set: payload\n      }\n    }\n  });\n}), _defineProperty(_createReducer, completeAnalyzeToxicity, function (state, payload) {\n  return update(state, {\n    toxicity: {\n      fetching: {\n        $set: false\n      },\n      error: {\n        $set: null\n      },\n      data: {\n        $set: payload\n      }\n    }\n  });\n}), _defineProperty(_createReducer, resetAnalyzeToxicity, function (state) {\n  return update(state, {\n    toxicity: {\n      $set: initialState.toxicity\n    }\n  });\n}), _defineProperty(_createReducer, clearSentimentInput, function () {\n  return initialState;\n}), _createReducer), initialState);","map":{"version":3,"sources":["C:\\Users\\adity\\OneDrive\\Desktop\\react-sentiment-analyzer\\src\\reducers\\analyzeReducer.js"],"names":["createReducer","update","clearSentimentInput","updateSentimentInput","reportSentimentAnalysis","startAnalyzeToxicity","failAnalyzeToxicity","completeAnalyzeToxicity","resetAnalyzeToxicity","initialState","Object","freeze","input","sentiment","toxicity","data","fetching","error","state","payload","$set"],"mappings":";;;;AAAA,SAASA,aAAT,QAA8B,WAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,SACIC,mBADJ,EAEIC,oBAFJ,EAGIC,uBAHJ,EAIIC,oBAJJ,EAKIC,mBALJ,EAMIC,uBANJ,EAOIC,oBAPJ,QAQO,oBARP;AAUA,IAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC/BC,EAAAA,KAAK,EAAE,EADwB;AAE/BC,EAAAA,SAAS,EAAE,IAFoB;AAG/BC,EAAAA,QAAQ,EAAEJ,MAAM,CAACC,MAAP,CAAc;AACpBI,IAAAA,IAAI,EAAE,IADc;AAEpBC,IAAAA,QAAQ,EAAE,KAFU;AAGpBC,IAAAA,KAAK,EAAE;AAHa,GAAd;AAHqB,CAAd,CAArB;AAUA,eAAejB,aAAa,uDAEnBG,oBAFmB,EAEI,UAACe,KAAD,EAAQC,OAAR;AAAA,SACpBlB,MAAM,CAACiB,KAAD,EAAQ;AACVN,IAAAA,KAAK,EAAE;AAAEQ,MAAAA,IAAI,EAAED;AAAR,KADG;AAEVL,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE;AAAEK,QAAAA,IAAI,EAAE;AAAR,OADA;AAENH,MAAAA,KAAK,EAAE;AAAEG,QAAAA,IAAI,EAAE;AAAR;AAFD;AAFA,GAAR,CADc;AAAA,CAFJ,mCAUnBhB,uBAVmB,EAUO,UAACc,KAAD,EAAQC,OAAR;AAAA,SACvBlB,MAAM,CAACiB,KAAD,EAAQ;AACVL,IAAAA,SAAS,EAAE;AAAEO,MAAAA,IAAI,EAAED;AAAR;AADD,GAAR,CADiB;AAAA,CAVP,mCAcnBd,oBAdmB,EAcI,UAAAa,KAAK;AAAA,SACzBjB,MAAM,CAACiB,KAAD,EAAQ;AACVJ,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE;AAAEK,QAAAA,IAAI,EAAE;AAAR,OADA;AAENJ,MAAAA,QAAQ,EAAE;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAFJ;AAGNH,MAAAA,KAAK,EAAE;AAAEG,QAAAA,IAAI,EAAE;AAAR;AAHD;AADA,GAAR,CADmB;AAAA,CAdT,mCAsBnBd,mBAtBmB,EAsBG,UAACY,KAAD,EAAQC,OAAR;AAAA,SACnBlB,MAAM,CAACiB,KAAD,EAAQ;AACVJ,IAAAA,QAAQ,EAAE;AACNE,MAAAA,QAAQ,EAAE;AAAEI,QAAAA,IAAI,EAAE;AAAR,OADJ;AAENH,MAAAA,KAAK,EAAE;AAAEG,QAAAA,IAAI,EAAED;AAAR;AAFD;AADA,GAAR,CADa;AAAA,CAtBH,mCA6BnBZ,uBA7BmB,EA6BO,UAACW,KAAD,EAAQC,OAAR;AAAA,SACvBlB,MAAM,CAACiB,KAAD,EAAQ;AACVJ,IAAAA,QAAQ,EAAE;AACNE,MAAAA,QAAQ,EAAE;AAAEI,QAAAA,IAAI,EAAE;AAAR,OADJ;AAENH,MAAAA,KAAK,EAAE;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAFD;AAGNL,MAAAA,IAAI,EAAE;AAAEK,QAAAA,IAAI,EAAED;AAAR;AAHA;AADA,GAAR,CADiB;AAAA,CA7BP,mCAqCnBX,oBArCmB,EAqCI,UAAAU,KAAK;AAAA,SACzBjB,MAAM,CAACiB,KAAD,EAAQ;AACVJ,IAAAA,QAAQ,EAAE;AAAEM,MAAAA,IAAI,EAAEX,YAAY,CAACK;AAArB;AADA,GAAR,CADmB;AAAA,CArCT,mCAyCnBZ,mBAzCmB,EAyCG;AAAA,SAAMO,YAAN;AAAA,CAzCH,oBA2CxBA,YA3CwB,CAA5B","sourcesContent":["import { createReducer } from 'redux-act';\r\nimport update from 'immutability-helper';\r\n\r\nimport {\r\n    clearSentimentInput,\r\n    updateSentimentInput,\r\n    reportSentimentAnalysis,\r\n    startAnalyzeToxicity,\r\n    failAnalyzeToxicity,\r\n    completeAnalyzeToxicity,\r\n    resetAnalyzeToxicity,\r\n} from '../actions/analyze';\r\n\r\nconst initialState = Object.freeze({\r\n    input: '',\r\n    sentiment: null,\r\n    toxicity: Object.freeze({\r\n        data: null,\r\n        fetching: false,\r\n        error: null,\r\n    }),\r\n});\r\n\r\nexport default createReducer(\r\n    {\r\n        [updateSentimentInput]: (state, payload) =>\r\n            update(state, {\r\n                input: { $set: payload },\r\n                toxicity: {\r\n                    data: { $set: null },\r\n                    error: { $set: null },\r\n                },\r\n            }),\r\n        [reportSentimentAnalysis]: (state, payload) =>\r\n            update(state, {\r\n                sentiment: { $set: payload },\r\n            }),\r\n        [startAnalyzeToxicity]: state =>\r\n            update(state, {\r\n                toxicity: {\r\n                    data: { $set: null },\r\n                    fetching: { $set: true },\r\n                    error: { $set: null },\r\n                },\r\n            }),\r\n        [failAnalyzeToxicity]: (state, payload) =>\r\n            update(state, {\r\n                toxicity: {\r\n                    fetching: { $set: false },\r\n                    error: { $set: payload },\r\n                },\r\n            }),\r\n        [completeAnalyzeToxicity]: (state, payload) =>\r\n            update(state, {\r\n                toxicity: {\r\n                    fetching: { $set: false },\r\n                    error: { $set: null },\r\n                    data: { $set: payload },\r\n                },\r\n            }),\r\n        [resetAnalyzeToxicity]: state =>\r\n            update(state, {\r\n                toxicity: { $set: initialState.toxicity },\r\n            }),\r\n        [clearSentimentInput]: () => initialState,\r\n    },\r\n    initialState,\r\n);\r\n"]},"metadata":{},"sourceType":"module"}