{"ast":null,"code":"import { createAction } from 'redux-act';\nimport flow from 'lodash/flow';\nimport sentimentAnalyzer from '../utils/sentimentAnalyzer';\nimport toxicityAnalyzer from '../utils/toxicityAnalyzer';\nexport var clearSentimentInput = createAction('CLEAR_SENTIMENT_INPUT');\nexport var updateSentimentInput = createAction('UPDATE_SENTIMENT_INPUT');\nexport var reportSentimentAnalysis = createAction('REPORT_SENTIMENT_ANALYSIS');\nexport var startAnalyzeToxicity = createAction('START_ANALYZE_TOXICITY');\nexport var failAnalyzeToxicity = createAction('FAIL_ANALYZE_TOXICITY');\nexport var completeAnalyzeToxicity = createAction('COMPLETE_ANALYZE_TOXICITY');\nexport var resetAnalyzeToxicity = createAction('RESET_ANALYZE_TOXICITY');\nexport function analyzeSentiment(text) {\n  return function (dispatch) {\n    dispatch(updateSentimentInput(text));\n    return flow(sentimentAnalyzer, reportSentimentAnalysis, dispatch)(text);\n  };\n}\nexport function analyzeToxicity() {\n  return function (dispatch, getState) {\n    dispatch(startAnalyzeToxicity());\n\n    var _getState = getState(),\n        input = _getState.analyze.input;\n\n    return toxicityAnalyzer(input).then(function (data) {\n      return dispatch(completeAnalyzeToxicity(data));\n    }).catch(function (err) {\n      window.console.warn(err);\n      return dispatch(failAnalyzeToxicity(err));\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\adity\\OneDrive\\Desktop\\react-sentiment-analyzer\\src\\actions\\analyze.js"],"names":["createAction","flow","sentimentAnalyzer","toxicityAnalyzer","clearSentimentInput","updateSentimentInput","reportSentimentAnalysis","startAnalyzeToxicity","failAnalyzeToxicity","completeAnalyzeToxicity","resetAnalyzeToxicity","analyzeSentiment","text","dispatch","analyzeToxicity","getState","input","analyze","then","data","catch","err","window","console","warn"],"mappings":"AAAA,SAASA,YAAT,QAA6B,WAA7B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AAEA,OAAO,IAAMC,mBAAmB,GAAGJ,YAAY,CAAC,uBAAD,CAAxC;AACP,OAAO,IAAMK,oBAAoB,GAAGL,YAAY,CAAC,wBAAD,CAAzC;AACP,OAAO,IAAMM,uBAAuB,GAAGN,YAAY,CAC/C,2BAD+C,CAA5C;AAIP,OAAO,IAAMO,oBAAoB,GAAGP,YAAY,CAAC,wBAAD,CAAzC;AACP,OAAO,IAAMQ,mBAAmB,GAAGR,YAAY,CAAC,uBAAD,CAAxC;AACP,OAAO,IAAMS,uBAAuB,GAAGT,YAAY,CAC/C,2BAD+C,CAA5C;AAGP,OAAO,IAAMU,oBAAoB,GAAGV,YAAY,CAAC,wBAAD,CAAzC;AAEP,OAAO,SAASW,gBAAT,CAA0BC,IAA1B,EAAgC;AACnC,SAAO,UAAAC,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACR,oBAAoB,CAACO,IAAD,CAArB,CAAR;AAEA,WAAOX,IAAI,CACPC,iBADO,EAEPI,uBAFO,EAGPO,QAHO,CAAJ,CAILD,IAJK,CAAP;AAKH,GARD;AASH;AAED,OAAO,SAASE,eAAT,GAA2B;AAC9B,SAAO,UAACD,QAAD,EAAWE,QAAX,EAAwB;AAC3BF,IAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;;AAD2B,oBAKvBQ,QAAQ,EALe;AAAA,QAIZC,KAJY,aAIvBC,OAJuB,CAIZD,KAJY;;AAO3B,WAAOb,gBAAgB,CAACa,KAAD,CAAhB,CACFE,IADE,CACG,UAAAC,IAAI;AAAA,aAAIN,QAAQ,CAACJ,uBAAuB,CAACU,IAAD,CAAxB,CAAZ;AAAA,KADP,EAEFC,KAFE,CAEI,UAAAC,GAAG,EAAI;AACVC,MAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBH,GAApB;AAEA,aAAOR,QAAQ,CAACL,mBAAmB,CAACa,GAAD,CAApB,CAAf;AACH,KANE,CAAP;AAOH,GAdD;AAeH","sourcesContent":["import { createAction } from 'redux-act';\r\nimport flow from 'lodash/flow';\r\n\r\nimport sentimentAnalyzer from '../utils/sentimentAnalyzer';\r\nimport toxicityAnalyzer from '../utils/toxicityAnalyzer';\r\n\r\nexport const clearSentimentInput = createAction('CLEAR_SENTIMENT_INPUT');\r\nexport const updateSentimentInput = createAction('UPDATE_SENTIMENT_INPUT');\r\nexport const reportSentimentAnalysis = createAction(\r\n    'REPORT_SENTIMENT_ANALYSIS',\r\n);\r\n\r\nexport const startAnalyzeToxicity = createAction('START_ANALYZE_TOXICITY');\r\nexport const failAnalyzeToxicity = createAction('FAIL_ANALYZE_TOXICITY');\r\nexport const completeAnalyzeToxicity = createAction(\r\n    'COMPLETE_ANALYZE_TOXICITY',\r\n);\r\nexport const resetAnalyzeToxicity = createAction('RESET_ANALYZE_TOXICITY');\r\n\r\nexport function analyzeSentiment(text) {\r\n    return dispatch => {\r\n        dispatch(updateSentimentInput(text));\r\n\r\n        return flow(\r\n            sentimentAnalyzer,\r\n            reportSentimentAnalysis,\r\n            dispatch,\r\n        )(text);\r\n    };\r\n}\r\n\r\nexport function analyzeToxicity() {\r\n    return (dispatch, getState) => {\r\n        dispatch(startAnalyzeToxicity());\r\n\r\n        const {\r\n            analyze: { input },\r\n        } = getState();\r\n\r\n        return toxicityAnalyzer(input)\r\n            .then(data => dispatch(completeAnalyzeToxicity(data)))\r\n            .catch(err => {\r\n                window.console.warn(err);\r\n\r\n                return dispatch(failAnalyzeToxicity(err));\r\n            });\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}